/* tslint:disable */
/* eslint-disable */
/**
 * intract
 * intract is an rss reader and generator for the modern web
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SystemTime } from './SystemTime';
import {
    SystemTimeFromJSON,
    SystemTimeFromJSONTyped,
    SystemTimeToJSON,
} from './SystemTime';

/**
 * 
 * @export
 * @interface Feed
 */
export interface Feed {
    /**
     * description of the feed
     * @type {any}
     * @memberof Feed
     */
    description?: any | null;
    /**
     * title of that image, can be used for alt text
     * @type {any}
     * @memberof Feed
     */
    imageText?: any | null;
    /**
     * link to an image specified for this feed
     * @type {any}
     * @memberof Feed
     */
    imageUrl?: any | null;
    /**
     * when the feed was last checked
     * @type {SystemTime}
     * @memberof Feed
     */
    lastChecked: SystemTime;
    /**
     * link to the feed
     * @type {any}
     * @memberof Feed
     */
    link?: any | null;
    /**
     * title of the feed
     * @type {any}
     * @memberof Feed
     */
    title?: any | null;
    /**
     * url of the feed
     * @type {any}
     * @memberof Feed
     */
    url: any | null;
}

/**
 * Check if a given object implements the Feed interface.
 */
export function instanceOfFeed(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "lastChecked" in value;
    isInstance = isInstance && "url" in value;

    return isInstance;
}

export function FeedFromJSON(json: any): Feed {
    return FeedFromJSONTyped(json, false);
}

export function FeedFromJSONTyped(json: any, ignoreDiscriminator: boolean): Feed {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'imageText': !exists(json, 'image_text') ? undefined : json['image_text'],
        'imageUrl': !exists(json, 'image_url') ? undefined : json['image_url'],
        'lastChecked': SystemTimeFromJSON(json['last_checked']),
        'link': !exists(json, 'link') ? undefined : json['link'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'url': json['url'],
    };
}

export function FeedToJSON(value?: Feed | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'image_text': value.imageText,
        'image_url': value.imageUrl,
        'last_checked': SystemTimeToJSON(value.lastChecked),
        'link': value.link,
        'title': value.title,
        'url': value.url,
    };
}

